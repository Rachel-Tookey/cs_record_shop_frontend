@page "/songs/"
@using RSFrontEnd.Clients
@using RSFrontEnd.Models
@rendermode InteractiveAuto

<!---- filter mechanism here ---->

@if (songs.Count > 0)
{
    <div class="container">
        <div class="row">
            
            <Virtualize Items="songs" Context="song">
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-4">
                <SongSummary song="song" deleteFunction="DeleteSong"></SongSummary>
                </div>
            </Virtualize>

        </div>
    </div>

}
else
{
    <Loader></Loader>
    
}



@code {
    
    public List<Song> songs { get; set; } = new List<Song>() ;

    public List<Song> FilteredSongs { get; set; } = new List<Song>(); 

    protected override async Task OnInitializedAsync()
    {
        var webclient = new HttpBackendClient<List<Song>>("api/song");
        songs = await webclient.GetRequest();
    }
    
    public async Task DeleteSong(int id)
    {
        var client = new HttpBackendClient<Song>($"api/song/{id}"); 
        var response = await client.DeleteRequest();
        if (response == System.Net.HttpStatusCode.NoContent)
        {
            songs = songs.Where(s => s.Id != id).ToList();
            StateHasChanged();
        }
    }

    
}

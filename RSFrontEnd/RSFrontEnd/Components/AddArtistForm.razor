@using RSFrontEnd.Models;
@using RSFrontEnd.Clients;


<EditForm FormName="AddArtist" Model="@artist" OnInvalidSubmit="(() => HandleInvalidSubmit())" OnValidSubmit="HandleValidSubmit">
        <h6 style="color: #FF0000">@Success</h6>
        <AntiForgeryToken/>
        <DataAnnotationsValidator/>

        <div>
            <div class="form-group">
            <label for="InputName">Name:</label>
            <InputText id="InputName" class="form-control" @bind-Value="@artist.Name"/>
            <ValidationMessage For="@(() => artist.Name)"/>
            </div>
        </div>

        <br/>
        <div>
            <div class="form-group">
            <label for="InputUrl" >Image url:</label>
            <InputText id="InputUrl" class="form-control" @bind-Value="@artist.ImageUrl"/>
            <ValidationMessage  For="@(() => artist.ImageUrl)"/>
        </div>

        </div>

    <div>
            <img src="@artist.ImageUrl" @onerror="@(() => ImageValid = false)" @onload="(() => ImageValid = true)" style="height:0; visibility: hidden"/>
        </div>


        <div>
            <div class="form-group">
            <label for="YearsActive">Years active:</label>
            <InputNumber id="YearsActive" class="form-control" @bind-Value="@artist.YearsActive"/>
            <ValidationMessage For="@(() => artist.YearsActive)"/>
        </div>
        </div>

        <br/>
        
        <div>
            @if (Genres != null)
            {
                <label>
                    Select any genres: 
                    <select class="form-select"  @bind="SelectedGenres" multiple>
                        @foreach (var g in Genres)
                        {
                            <option value="@g.Id">@g.Name</option>
                        }
                    </select>
                    Press Ctl for 2+
                </label>
                
                
            }
           

        </div>
        
        
        <br/>
        <div>
            <button id="newartist" class="btn btn-light" type="submit">Submit</button>
        </div>
        
</EditForm>


@code {
    
    public Artist artist { get; set; } = new Artist(); 

    public string Success { get; set; }

    public bool ImageValid { get; set;  }
    
    public List<Genre> Genres { get; set; } = new();
    
    public int[] SelectedGenres { get; set; } = [];
    
    protected override async Task OnInitializedAsync()
    {
        var webclient = new HttpBackendClient<List<Genre>>("api/artist/genre");
        Genres = await webclient.GetRequest();
    }
 
    public void HandleInvalidSubmit(string message = null)
    {
        message = message is null ? "Some fields are invalid" : message; 
        Success = message;
    }


    public async Task HandleValidSubmit()
    {
        if (ImageValid)
        {
            artist.Genres = Genres.Where(g => SelectedGenres.Contains(g.Id)).ToList(); 
            var client = new HttpBackendClient<Artist>("api/artist");
            var response = await client.PostRequest(artist); 
            if (response == System.Net.HttpStatusCode.Created)
            {
                Success = "‧\u208a\u02da\ud83d\udd87\ufe0f\u2729 \u208a artist added \u02da\ud83c\udfa7\u22b9\u2661";
                artist = new Artist(); 
            } else
            {
                Success = "Something went wrong! Please try again later";
            }
        } else
        {
            HandleInvalidSubmit("Image Url is invalid"); 
        }

    }


}

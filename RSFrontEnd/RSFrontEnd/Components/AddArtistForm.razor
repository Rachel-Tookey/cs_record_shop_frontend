@using RSFrontEnd.Models;
@using RSFrontEnd.Clients;


<h6>@Success</h6>

<EditForm FormName="AddArtist" Model="@artist" OnInvalidSubmit="HandleInvalidSubmit" OnValidSubmit="HandleValidSubmit">
    
    <AntiForgeryToken />
    <DataAnnotationsValidator />

    <div>
        <label for="InputName">Name:</label>
            <InputText id="InputName" @bind-Value="@artist.Name"/> 
            <ValidationMessage For="@(() => artist.Name)" />
    </div>

    <br />
    <div>
        <label for="InputUrl">Image (url):</label>
        <InputText id="InputUrl" @bind-Value="@artist.ImageUrl"/>
        <ValidationMessage For="@(() => artist.ImageUrl)" />
    </div>
    
    <div>
        <img src="@artist.ImageUrl" @onerror="@(() => ImageValid = false)" @onload="(() => ImageValid = true)" />
    </div>


    <div>
        <label for="YearsActive">Years Active:</label>
            <InputNumber id="YearsActive" @bind-Value="@artist.YearsActive"/>
        <ValidationMessage For="@(() => artist.YearsActive)" />
    </div>

    <br />

    <div>
        <button type="submit">Submit</button>
    </div>


</EditForm>


@code {

    public Artist artist { get; set; } = new Artist(); 

    public string Success { get; set; }

    public bool ImageValid { get; set;  } 

    public void HandleInvalidSubmit()
    {
        Success = "Some fields are invalid";
    }


    public async Task HandleValidSubmit()
    {
        if (ImageValid) {
            var client = new HttpBackendClient<Artist>("api/artist");
            var response = await client.PostRequest(artist); 
            if (response == System.Net.HttpStatusCode.Created)
            {
                Success = "Artist added!";
                artist = new Artist(); 
            } else
            {
                Success = "Something went wrong! Please try again later";
            }
        } else
        {
            HandleInvalidSubmit(); 
        }

    }




}
